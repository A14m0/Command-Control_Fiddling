New approach to modular-ness:

Each transport will be separately compiled into a .so file
Each .so file will have 2 things:
    1. An identifier integer, marking it as a transport or module
    2. A main entrypoint function that will initialize everything they need
The above applies to all .so files

Transports will implement the following functions:
    1. int init()
    2. int end()

    // Primitives
    3. int send_ok()
    4. int send_err()
    5. int listen()
    6. int read(char **buff, int length)
    7. int write(char *buff, int length)
    8. pClientDat get_data()
    
    // Functionality
    9. int download_file(char *ptr, int is_manager, char *extra)
    10. int get_loot(char *loot)
    11. int upload_file(char *ptr, int is_module)
    12. int get_info(char *ptr)
    13. int init_reverse_shell(char *id)
    14. int determine_handler()

    // Optional
    15. int make_agent(char *ip, char *port)

Modules will be able to be executed independently and their only exported function will be the main entrypoint
