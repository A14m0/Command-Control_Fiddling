Problems:
    1. Server fails to rebind to the address (share universal socket with ConnectionInstances?)
    2. God knows what else

-> Maybe make public server struct/object that contains all of the active binds, 
   so when there are multiple connections needing the same port, it can just check
   there on failed bind and get access to that bind?




Network communications need to be modified in the server in order to modularize it to incorporate 
multiple different kinds of transports. The Server class should only do the network comms over
the designated transport!!!!!!
_____________________________________________________________________________________________________


1. Fix problems related to uncleared server buffers
    * Check out loot downloading

2. Infinite looping happening when consecutive module executions

3. Add argparsing onto client 
    * Maybe homebrew in order to keep dependencies low?

4. Cleanup out/ after agent compilation

5. Allow for better catching of empty data file

6. Obfuscate client hard-coded values
    * Maybe a simple XOR encrypt-decrypt?
        ** Would be easy, but would include non-encrypted data

7. Add anti-debugging things
    * Test for sandboxing/VM (timed delay, VMWare asm instructions)
        ** Resources for this:
            https://kb.vmware.com/s/article/1009458
            https://www.cyberbit.com/blog/endpoint-security/anti-vm-and-anti-sandbox-explained/





Check out this method for handling custom methods over multiple processes and fds
https://github.com/curesec/tools/tree/master/aesshell


